{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n## Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Sqli",
                  "Security",
                  "SourceServer",
                  "SourceWebForm",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/nttdots/go-dots/commit/38d1493d11c3a764136c953237233fd16a3e3dc9?diff=split#diff-c7737ee0a3441787e4bcee78bd8ab548aa068c1d16a2632ecf141d9f405d0105L-1",
                    "lines": [
                      {
                        "line": "cur.execute(\"select type, capacity from blocker where id=%d\" % i)\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "cur.execute(\"select type, capacity from blocker where id=%s\", (i,))\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/StorminStanley/st2incubator/commit/0b4500580e10365fa7f4fe8b2e96dbba2bd329bf?diff=split#diff-31d8468daa423d5561ecde70355d49ec9e205612ac5e39aa59516dbcbcf37e4aL-1",
                    "lines": [
                      {
                        "line": "email = MySQLdb.escape_string(email)\n",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "c = self.db.cursor()\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "query = 'SELECT * FROM user_registration WHERE email=\"%s\"' % email\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    c.execute(query)\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/stopstalk/stopstalk-deployment/commit/e378c37e6a401dc430bf52dce1be8760b9bf9a25?diff=split#diff-c69db29661e495522c99940fe7c8bab30c8a0ccc3fc10ef92b6aa066f14d592fL-1",
                    "lines": [
                      {
                        "line": "    iutable = db.institute_user\n",
                        "lineNumber": 408,
                        "lineChange": "added"
                      },
                      {
                        "line": "    query = (atable.institute == record.institute) & \\\n",
                        "lineNumber": 409,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.email != record.email) & \\\n",
                        "lineNumber": 410,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.institute != \"Other\") & \\\n",
                        "lineNumber": 411,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.blacklisted == False) & \\\n",
                        "lineNumber": 412,
                        "lineChange": "none"
                      },
                      {
                        "line": "            (atable.registration_key == \"\")\n",
                        "lineNumber": 413,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 414,
                        "lineChange": "none"
                      },
                      {
                        "line": "    rows = db(query).select(atable.id)\n",
                        "lineNumber": 415,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if len(rows):\n",
                        "lineNumber": 416,
                        "lineChange": "none"
                      },
                      {
                        "line": "        query_values = \",\".join([str((int(x.id), int(record.id))) for x in rows]).replace(\" \", \"\")\n",
                        "lineNumber": 416,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        db.executesql(\"INSERT INTO institute_user(send_to_id,user_registered_id) VALUES %s;\" % query_values)\n",
                        "lineNumber": 417,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        for row in rows:\n",
                        "lineNumber": 417,
                        "lineChange": "added"
                      },
                      {
                        "line": "            iutable.insert(send_to_id=row.id,\n",
                        "lineNumber": 418,
                        "lineChange": "added"
                      },
                      {
                        "line": "                           user_registered_id=record.id)\n",
                        "lineNumber": 419,
                        "lineChange": "added"
                      },
                      {
                        "line": "            db.commit()\n",
                        "lineNumber": 420,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 64,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n## Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoRateLimitingForExpensiveWebOperation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/natsukagami/themis-web-interface/commit/e1ef34f8b95e7eefab54c204b78fbdee70169a6d?diff=split#diff-cd0e12b228a7dea99a7346adf68cfc7a6a2c321846cc8a90fc6cd92cf8066d5eL-1",
                    "lines": [
                      {
                        "line": "router.post('/', (req, res, next) => {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const rateLimiter = require('../controls/rate-limiter')({\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t// Allow 3 submits, then slows down\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfreeRetries: 30,\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tminWait: 2 * 60 * 60,\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tmaxWait: 2 * 60 * 60,\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tlifetime: 60 * 60\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "router.post('/', rateLimiter.prevent, (req, res, next) => {\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Waifu-pics/waifu-api/commit/da0d3b4ee8dd4e2ab0a789dfd04cb304a537368e?diff=split#diff-0eddd48e85f4f98a238d49bfe0b4cf514b1430322bcdc196b1a97786e0ec30c8L-1",
                    "lines": [
                      {
                        "line": "const rateLimit = require(\"express-rate-limit\")\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = ({ db, app, config, s3 }) => {\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Checking if user is Admin to prevent rate limit middleware\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const chkAdmin = async (req, res, next) => {\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const { token } = req.headers\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const Admins = db.collection('admins')\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "        req.chkAdmin = Boolean(req.headers.token && typeof token === \"string\" && Boolean(await Admins.findOne({token})))\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "        next()\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Rate limit middleware\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const limiter = rateLimit({\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        windowMs: 10 * 60 * 1000, // 10 minutes\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "        max: 15,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        message: \"You can only upload 15 files per 10 minutes!\",\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "        statusCode: 400,\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "        skip: function (req) {\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return req.chkAdmin\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    })\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Do shit to upload\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(\"/api/upload\", chkAdmin, limiter)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(fileUpload({\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        limits: { fileSize: config.maxUploadSize * 1024 * 1024 },\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        abortOnLimit: true,\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        createParentPath: true\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }))\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app.post('/api/upload', async (req, res) => {\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/davidmerfield/Blot/commit/f2bcb51b129075c8ebe5c1c23fac36dee35e800c?diff=split#diff-31b7f0d966974821a84da24ef72a8b290d5b82d34861dbdf7be2743821b2f4f5L-1",
                    "lines": [
                      {
                        "line": "// stores state locally, don't use this in production\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var store = new brute.MemoryStore();\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var limiter = new brute(store);\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var client = require('client');\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "var Brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "var RedisStore = require('express-brute-redis');\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "var store = new RedisStore({\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    client: client,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "    prefix: 'brute:'\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "var limiter = new Brute(store, {\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  freeRetries: 200,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  failCallback: onLimit,\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "var login = Express.Router();\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "var form = login.route('/');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(limiter.prevent);\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "form.get(checkToken, function(req, res){\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('log-in-email');\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.post(parse, checkEmail, checkReset, checkPassword);\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(errorHandler);\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "function onLimit (req, res, next, until) {\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.status(429).send('Log in rate limit hit. Please wait ' + moment(until).toNow(true) + ' before retrying.');\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "java/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "XSS",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jease/jease/commit/625740641a94858ef5745988e191928961d7a1d1?diff=split#diff-4f00043890a96013e1de394eafc0f79a9d186171cbd78bf06b229b75e794d21eL-1",
                    "lines": [
                      {
                        "line": "<h1><%=I18N.get(\"Search_results_for\")%> &quot;<%=StringEscapeUtils.escapeXml(request.getParameter(\"query\"))%>&quot;</h1>\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "<h1><%=I18N.get(\"Search_results_for\")%> &quot;<%=StringEscapeUtils.escapeHtml4(request.getParameter(\"query\"))%>&quot;</h1>\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/NaveFarjun/MagitWeb/commit/1d1dfbfb3529f300a938005f4e5125222624c573?diff=split#diff-cda33ce748881132817fdfd59b6cf07422431a10222ec77cd3d3dac178c203efL-1",
                    "lines": [
                      {
                        "line": "resp.setContentType(\"application/json;charset=UTF-8\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "String userName = req.getParameter(\"userName\");\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (userName == null) {\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    userName = SessionUtils.getUserName(req);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "UserInSystem user=ServletUtils.getUserManaqer(getServletContext()).getUsers().get(userName);\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "Repository repository=user.getRepositories().get(req.getParameter(\"repName\"));\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "try(PrintWriter out=resp.getWriter()){\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Gson gson=new Gson();\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String json=gson.toJson(repository);\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    out.println(json);\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/lumifyio/lumify/commit/756a27130ac5acf58098e5a7772b44f2a821b6dc?diff=split#diff-df18096d73d0b4e0c29d7465cde50a98fc87b3bbac5d46f0a30ddffce8cab965L-1",
                    "lines": [
                      {
                        "line": "httpServletResponse.setContentType(\"text/plain\");\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "PrintWriter writer = httpServletResponse.getWriter();\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "writer.println(message);\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 31,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "XSS",
                  "Security",
                  "SourceResourceAccess",
                  "SourceStackTrace",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mockyeah/mockyeah/commit/24e0243bfde18396637ba0bfca681c2cf2d2be33?diff=split#diff-8fef0ae737443178f9c7da5682af7782959b12df701f054731a31e4238049341L-1",
                    "lines": [
                      {
                        "line": "mockyeah.post('/', (req, res) => {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  res.send(req.body.hey);\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "mockyeah.post('/', {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "  text: req => req.body.hey\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/spmjs/spmjs.io/commit/7ef27fc5ab515b9b7b2ed55b5797d87f78c027e4?diff=split#diff-494245839b096ba21695a9461e8c619198001b9ecd9d129c5c9af193ae9d67fbL-1",
                    "lines": [
                      {
                        "line": "res.set('Content-Type', 'application/json');\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.send(JSON.stringify(p));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MROS/infinite-city/commit/e44f362054f1d95d6e266d6448cc333b5564c87d?diff=split#diff-2fe53c2b142a276b20739b3145462cc926666764b0a5b4fcd1605be1d316e4d2L-1",
                    "lines": [
                      {
                        "line": "res.status(400).send(err.message);\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.status(400).send(\"FAIL\");\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 141,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "python/OR",
              "name": "OR",
              "shortDescription": {
                "text": "Open Redirect"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nAn open redirect attack takes place when a web application redirects the user to an unauthorized and untrusted site. In general, URL redirection refers to the ability of a website or application to redirect users to another site. This is often a benign and useful feature. For example, if a resource has moved to a new location, URL redirection can transfer the user to that location rather than displaying an error message.\nHowever, this ability can be exploited through social engineering, tricking the user into believing they are accessing one site when, in reality, they are being redirected to a dangerous site, such as a phishing site. Once there, the user may be further tricked into entering credentials or personally identifiable information (PII), believing they are still within the original, trusted domain. Attackers can then use these credentials to gain unauthorized access or leverage the user's PII for sale or ransom.\n\n## Best practices for prevention\n* When developing a site or web app, consider implementing a disclaimer page to remind users that they are leaving a secure site.\n* Adopt a zero-trust approach in which all input is treated with suspicion.\n* Validate all input against deny-lists to ensure it does not contain code to redirect the user. This method is good but inherently incomplete.\n* Be aware of all sources of untrusted input being sent to the server that could be used to redirect the user, such as cookies, URL components, filenames, query results, request headers, and more.\n* In particular, be aware of potential API calls that could send input indirectly to redirect the user.\n* To protect end users, use a firewall to block known malicious sites, train users to recognize basic signs of a phishing attack, and ensure that all network endpoints are patched with the most current updates.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "OR",
                  "Security",
                  "SourceServer",
                  "SourceHttpParam",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/devxoul/graygram-web/commit/3f3795656c175a6145e490bba75b78b095eb4f84?diff=split#diff-5edca41573c679e401c5578f3f1e187bbab624c1bce76d25b98e61550f28100fL-1",
                    "lines": [
                      {
                        "line": "from flask import current_app\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "from flask import redirect\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from StringIO import StringIO\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "from werkzeug.exceptions import NotFound\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "from graygram import photo_uploader\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "from graygram.s3 import usercontent_bucket\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "def usercontent_url(*path_components):\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "    base_url = current_app.config['USERCONTENT_BASE_URL']\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return '/'.join([base_url] + list(path_components))\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "view = Blueprint('photos', __name__, url_prefix='/photos')\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "@view.route('/<photo_id>')\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "@view.route('/<photo_id>/original')\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_original(photo_id):\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return redirect(usercontent_bucket.url_for(photo_id + '/original'))\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    redirect(usercontent_url(photo_id, 'original'))\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/luispedro/luispedro_org/commit/6a779004a13227c32f530c66c0f23cd997fc895b?diff=split#diff-0cd0eee8cc4d438e2b69cd1bc20845c92426bc79d785edca052fb13e70352588L-1",
                    "lines": [
                      {
                        "line": "return HttpResponsePermanentRedirect(redirect[0].target)\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return HttpResponsePermanentRedirect('/'+redirect[0].target)\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ergoithz/browsepy/commit/9d12213fa958ce68fc0a0925b4ed7bf41d3d1b96?diff=split#diff-02ca1ad12c797012bebc56f215d0c51a338e46f830a734f6586a83adb824398cL-1",
                    "lines": [
                      {
                        "line": "    return redirect(request.form.get(\"backurl\") or url_for(\".index\"))\n",
                        "lineNumber": 380,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return redirect(url_for(\".browse\", path=relativize_path(p.path)))\n",
                        "lineNumber": 421,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 422,
                        "lineChange": "added"
                      },
                      {
                        "line": "@app.route(\"/upload/<path:path>\", methods=(\"POST\",))\n",
                        "lineNumber": 423,
                        "lineChange": "added"
                      },
                      {
                        "line": "def upload(path):\n",
                        "lineNumber": 424,
                        "lineChange": "added"
                      },
                      {
                        "line": "    try:\n",
                        "lineNumber": 425,
                        "lineChange": "added"
                      },
                      {
                        "line": "        realpath = urlpath_to_abspath(path)\n",
                        "lineNumber": 426,
                        "lineChange": "added"
                      },
                      {
                        "line": "    except OutsideDirectoryBase:\n",
                        "lineNumber": 427,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return NotFound()\n",
                        "lineNumber": 428,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 429,
                        "lineChange": "added"
                      },
                      {
                        "line": "    directory = File(realpath)\n",
                        "lineNumber": 430,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if not directory.is_directory or not directory.can_upload:\n",
                        "lineNumber": 431,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return NotFound()\n",
                        "lineNumber": 432,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 433,
                        "lineChange": "added"
                      },
                      {
                        "line": "    for f in request.files.values():\n",
                        "lineNumber": 434,
                        "lineChange": "added"
                      },
                      {
                        "line": "        filename = secure_filename(f.filename)\n",
                        "lineNumber": 435,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if filename:\n",
                        "lineNumber": 436,
                        "lineChange": "added"
                      },
                      {
                        "line": "            f.save(os.path.join(directory.path, filename))\n",
                        "lineNumber": 437,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return redirect(url_for(\".browse\", path=relativize_path(realpath)))\n",
                        "lineNumber": 438,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 439,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 28,
                "cwe": [
                  "CWE-601"
                ]
              }
            },
            {
              "id": "python/ServerInformationExposure",
              "name": "ServerInformationExposure",
              "shortDescription": {
                "text": "Server Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWhen a command to your site or application fails, it should do so gracefully, meaning that the user is informed that there has been a problem, rather than experiencing erratic behavior, such as crashing, hanging, or returning a 404 or similar generic error page.\n\nIn some cases, developers include information in an error message to help pinpoint the source of an error; these may include username, password, application path, stack values, and other internal details. When this weakness is present, if these logs are accessible to an attacker, it may give them clues as to the inner workings of the app, helping them plan a focused attack. For example, clues revealing SQL database details may help plan an SQL injection attack.\n\n## Best practices for prevention\n* Keep error messages to the barest minimum of helpful information that users absolutely need to know.\n* Use consistent error messages that do not give attackers clues that they might be on the right track to a successful attack, such as \"File not found\" or \"User name does not exist\".\n* Ensure that debugging information is removed from code prior to release.\n* Create clear policy for the types of errors that must be logged, which messages will be displayed to users, and which details will be logged for later alerting and debugging.\n* When logging error details, never include sensitive information such as passwords.\n* Implement naming conventions that will help you flag and defend sensitive information.\n* Use dynamic (white box) test techniques to identify conditions that could cause errors and failures and test thoroughly to ensure that the code performs gracefully without revealing sensitive data under these stress conditions.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "ServerInformationExposure",
                  "Security",
                  "SourceStackTrace",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/hcarvalhoalves/django-rest-thumbnails/commit/0ba38a5d752fba5b296264eb621ced611831a6bc?diff=split#diff-c96a187f2f543e8fad774cef55fc6d535ce533f3dabbd90cdf539aff7444b49bL-1",
                    "lines": [
                      {
                        "line": "DEFAULT_TIMEOUT = 30\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "SECRET_PARAM = getattr(settings, 'REST_THUMBNAILS_SECRET_PARAM', 'secret')\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "TIMEOUT = getattr(settings, 'REST_THUMBNAILS_LOCK_TIMEOUT', 30)\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "def rescue(status=200):\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return http.HttpResponse(status=status)\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "class ThumbnailView(View):\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "   def get(self, request, *args, **kwargs):\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Return 400 on invalid parameters - HTTP agents should also\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # cache this response\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "try:\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    thumbnail = get_thumbnail(**self.kwargs)\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "except ThumbnailError, e:\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return http.HttpResponseBadRequest(e)\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return rescue(status=400)\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/neurodata/ndstore/commit/2ea79e743de641ba61f302f7a6a03021a59afcef?diff=split#diff-c959a612f257e3226b18728f72286ca8dffd02019f8f11df8b09de587ee44de2L-1",
                    "lines": [
                      {
                        "line": "return django.http.HttpResponseNotFound(e)\n",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return django.http.HttpResponseNotFound(e.value)\n",
                        "lineNumber": 75,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fedspendingtransparency/data-act-broker-backend/commit/?diff=split#diff-96500b018d0175e0d44a2c267728ff061aa35d888dbf4642b21bc6aefa93c61eL-1",
                    "lines": [
                      {
                        "line": "import logging\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Add the file submission route\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "def add_file_routes(app,CreateCredentials):\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\" Create routes related to file submission for flask app\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    CREATE_CREDENTIALS = CreateCredentials\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Keys for the post route will correspond to the four types of files\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @app.route(\"/v1/submit_files/\", methods = [\"POST\"])\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @permissions_check\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def submit_files():\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        interfaces = InterfaceHolder()\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "            fileManager = FileHandler(request,interfaces)\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return fileManager.submit(LoginSession.getName(session),CREATE_CREDENTIALS)\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        except Exception as e:\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "            exc = ResponseException(str(e),StatusCode.INTERNAL_ERROR,type(e))\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            exc = ResponseException(str(\"Visit logs\"),StatusCode.INTERNAL_ERROR,type(e))\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "            logging.error(e)\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return JsonResponse.error(exc,exc.status,{})\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 33,
                "cwe": [
                  "CWE-209"
                ]
              }
            },
            {
              "id": "python/RunWithDebugTrue",
              "name": "RunWithDebugTrue",
              "shortDescription": {
                "text": "Debug Mode Enabled"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen debugging, it may be necessary to report detailed information to a developer. However, if the debugging code is not disabled when the application is operating in a production environment, then this sensitive information may be exposed to attackers.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "RunWithDebugTrue",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/youtify/youtify/commit/a3e91bcf71f2fca4e167bc86d15a2adb4a5323c1?diff=split#diff-0fa9312f4a91eb730539f65a0974930d40238ad957764ff0d987c31e9b698875L-1",
                    "lines": [
                      {
                        "line": "import webapp2\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "from google.appengine.ext.webapp import template\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "from google.appengine.ext.webapp import util\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "class MinimizerHandler(webapp2.RequestHandler):\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def get(self):\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "        path = os.path.join(os.path.dirname(__file__), 'html', 'minimizer.html')\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.response.headers['Content-Type'] = 'text/html; charset=utf-8';\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.response.out.write(template.render(path, {\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }))\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = webapp2.WSGIApplication([\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ('/.*', MinimizerHandler),\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ], debug=True)\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ], debug=False)\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/derolf/transcoder/commit/21126e722f6a36963f3ee0a00a85502e9b7a5646?diff=split#diff-5dd2ce715c71935cc12e2b05af1a76efbb5f720fa99d70328b36fb2b9460864cL-1",
                    "lines": [
                      {
                        "line": "from flask import Flask, request, Response, abort, send_file, jsonify\n",
                        "lineNumber": 0,
                        "lineChange": "none"
                      },
                      {
                        "line": "from awake import wol\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "import os, subprocess, re\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "import config as C\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "import library as L\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "import web\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "import restlibrary\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = Flask(__name__)\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "restlibrary.init( app )\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "web.init( app )\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.run( host=\"0.0.0.0\",port=C.port, threaded=True, debug=True )\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.run( host=\"0.0.0.0\",port=C.port, threaded=True, debug=False )\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/datacenter/acitoolkit/commit/f0f9b2cd94b8692c3c15eee3954781f0e0bb0587?diff=split#diff-49a9b8eb9a3986d165fea2b6e1d0c47801ca6fef3700465221e43dde511863c7L-1",
                    "lines": [
                      {
                        "line": "app.run(debug=True, host=args.ip, port=int(args.port))\n",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.run(debug=False, host=args.ip, port=int(args.port))\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 30,
                "cwe": [
                  "CWE-489"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords",
              "name": "NoHardcodedPasswords",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoHardcodedPasswords",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Gitualize/Gitualize/commit/f6de5689d637dc41abd4b43eea40371fd1088d33?diff=split#diff-273ae97b30b3f18c1d3fc9bf418b55be30c6e4a19f3f51953362cfa762980c63L-1",
                    "lines": [
                      {
                        "line": "user: 'docker',\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: 'docker',\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "database: 'docker',\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user: process.env.DATABASE_USER,\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "password: process.env.DATABASE_PASSWORD,\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "database: process.env.DATABASE_NAME,\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/UsabilityDynamics/node-rabbit-client/commit/bf652950ac5eb1cd85ebe349b29ad045df51dd07?diff=split#diff-506a1dcb4e0d34ef96430d0fa0790cc3e84cbf193ea91b3e49e5e52c86dad0f4L-1",
                    "lines": [
                      {
                        "line": "login        : 'udx',\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password     : 'ISM0Rules'\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "login        : process.env.RABBIT_LOGIN,\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "password     : process.env.RABBIT_PASSWORD\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/perborgen/data_hub/commit/8de6d9c7efdc6d0a773808c872c83f3374643a8e?diff=split#diff-58417e0f781b6656949d37258c8b9052ed266e2eb7a5163cad7b0863e6b2916aL-1",
                    "lines": [
                      {
                        "line": "var config  = require('./config');\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "var handler = require('./api/handler');\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "var inert   = require('inert');\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "var bell    = require('bell');\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "var hapiAC  = require('hapi-auth-cookie');\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.connection({\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    port: process.env.PORT || 8080,\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    host: \"0.0.0.0\" || \"localhost\"\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.register([inert, bell, hapiAC], function(err){\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (err) {\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throw err;\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var authCookieOptions = {\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        password: 'cookie-encryption-password', //Password used for encryption\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        cookie: 'sitepoint-auth', // Name of cookie to set\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        password: config.password || process.env.PASSWORD, //Password used for encryption\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        cookie: 'auth', // Name of cookie to set\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 44,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Chenwe-i-lin/KnowledgeFruits/commit/?diff=split#diff-ab8c675e5b4b07c550455b0884835f1df471bb69ad7142f6ad43b26cf33eb4e6L-1",
                    "lines": [
                      {
                        "line": "base_path = os.path.abspath(os.path.dirname(__file__))\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "base_path_for_data =  os.path.join(base_path,'data/texture')\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "file = os.path.join(base_path_for_data, image + '.png')\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "if os.path.abspath(file).startswith(base_path_for_data):\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open(os.getcwd() + \"/data/texture/\" + image + '.png', \"rb\") as f:\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 36,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/ServerLeak",
              "name": "ServerLeak",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n* Encrypt data at all times, whether in transit or at rest.\n* When transporting data, always use a secure protocol such as TLS.\n* Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n* Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n* Ensure that caching is disabled for all transactions involving sensitive information.\n* Store passwords with secure, salted hashing functions.\n* Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "ServerLeak",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/shock-lee/mix-api/commit/1c301459d2dff2d32995fe7ed4168d9cef9f4061?diff=split#diff-fce178fd04f00c87abe19ae834d3b46a0a3ed66cfbd77f9e3c83cddadf026c73L-1",
                    "lines": [
                      {
                        "line": "res.send(err);\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.send(response);\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/gaoxiaoliangz/readr/commit/8f3cc39ea75d8873c4f0a9fa200f3d7c06eb4fbb?diff=split#diff-b32d091414fa2a61cc7df6fa5333e2df7c3fba3d093e7fc022d020983040df70L-1",
                    "lines": [
                      {
                        "line": "}, err => {\n",
                        "lineNumber": 57,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const statusCode = err.statusCode || 500\n",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const htmlString = err.htmlString || err.message\n",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (error) {\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const errorMsg = isProd ? PROD_ERROR_MSG : error.message\n",
                        "lineNumber": 62,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const htmlString = render500(errorMsg, isProd)\n",
                        "lineNumber": 63,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/djenriquez/vault-ui/commit/e3f4146be29dd5cf90a865d5c03277c1225811a3?diff=split#diff-a1cb18479d10d3a9a08c88c4eefa33add2e4fc9337e22c5a2ac3f0bb1829687fL-1",
                    "lines": [
                      {
                        "line": "res.status(err.response.status).send(err.response);\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (err.response.status === 403) {\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.status(err.response.status).send(\"You are not authorized to access these resources.\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "} else {\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.status(err.response.status).send(err.message);\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 74,
                "cwe": [
                  "CWE-200"
                ]
              }
            },
            {
              "id": "java/Deserialization",
              "name": "Deserialization",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "Deserialization",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/rdrey/LoBReTiMMGaP/commit/e4f63073a593c7c8b7a4fada9a47c364e87177d2?diff=split#diff-8af010b0efb53da5ddef9791690aafa488a1293eae0e1ee4d342eb5a695c7eb9L-1",
                    "lines": [
                      {
                        "line": "in = new ObjectInputStream(socket.getInputStream());\n",
                        "lineNumber": 48,
                        "lineChange": "removed"
                      },
                      {
                        "line": "in = socket.getInputStream();\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/debezium/debezium-incubator/commit/f63fc9135ad7225b2e01b79bab0933e52e328639?diff=split#diff-4f79624db1bcaacfd2db3678cbf647fae1647c9bdfa0d0682b5640f991fc101aL-1",
                    "lines": [
                      {
                        "line": "Map<String, Object> props = new Yaml().load(fis);\n",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Properties props = new Properties();\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "props.load(fis);\n",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "fis.close();\n",
                        "lineNumber": 58,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dataspread/dataspread-web/commit/660e5d304050ddb44c1c8c6a6da4d60557e1ebbc?diff=split#diff-265fdf7f44a6ed48947f623af118676d522093203c3a578ca4b5044f9521efb8L-1",
                    "lines": [
                      {
                        "line": "ResultSet rs = stmt.executeQuery();\n",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (rs.next()) {\n",
                        "lineNumber": 222,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (useKryo) {\n",
                        "lineNumber": 223,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Input in = new Input(rs.getBytes(1));\n",
                        "lineNumber": 224,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Integer block_id = kryo.readObject(in, Integer.class);\n",
                        "lineNumber": 225,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        in.close();\n",
                        "lineNumber": 226,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        result.add(block_id);\n",
                        "lineNumber": 227,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    } else {\n",
                        "lineNumber": 228,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ObjectMapper mapper = new ObjectMapper();\n",
                        "lineNumber": 229,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        String value = new String(rs.getBytes(1));\n",
                        "lineNumber": 230,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n",
                        "lineNumber": 231,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Integer block_id = mapper.readValue(value, Integer.class);\n",
                        "lineNumber": 232,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        result.add(block_id);\n",
                        "lineNumber": 233,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 234,
                        "lineChange": "removed"
                      },
                      {
                        "line": "while (rs.next()) {\n",
                        "lineNumber": 222,
                        "lineChange": "added"
                      },
                      {
                        "line": "    result.add(Integer.valueOf(new String(rs.getBytes(1))));\n",
                        "lineNumber": 223,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 33,
                "cwe": [
                  "CWE-502"
                ]
              }
            },
            {
              "id": "python/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "Ssrf",
                  "Security",
                  "SourceServer",
                  "SourceHttpParam",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/rowanlupton/pylodon/commit/6d2e152f41f5073d6b224307690087ebdce3df12?diff=split#diff-0c2bad94cd303c5944a38a94f62a63355b8bed2e102dc87c0f44de95cf135b8aL-1",
                    "lines": [
                      {
                        "line": "import json, requests\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "from flask_pymongo import PyMongo\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from activipy import vocab\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "from .forms import userLogin, userRegister, composePost\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "from .users import User\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "# from .emails import lostPassword, checkToken\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongo = PyMongo(app)\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "SERVER_URL = 'http://populator.smilodon.social/'\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "API_HEADERS = {'Content-Type': 'application/ld+json', 'profile': 'https://www.w3.org/ns/activitystreams'}\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "@lm.user_loader\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "def load_user(handle):\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    u = mongo.db.users.find_one({\"id\": handle})\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not u:\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return None\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return User(u['id'])\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "@login_required\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tuser = mongo.db.users.find_one({'id': current_user.get_id()})\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tr = requests.get(user['inbox'], headers=API_HEADERS)\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tr = requests.get('http://localhost:5000/api/roo/inbox', headers=API_HEADERS)\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers/commit/23ad832af741f0354949a72e6c6f799eb9d2bace?diff=split#diff-7efee2ee97af01f846ed5818e84c955c51bd8efe06588e0dfa341c68966d945fL-1",
                    "lines": [
                      {
                        "line": "    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter, description=\"Downloads and unpacks assets\")\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    parser.add_argument(\"zip_url\", action=\"store\", type=str, help=\"URL of the assets package\")\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    args = parser.parse_args()\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    url = \"https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers/releases/download/v1.1.2/scenes.zip\"\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        request = requests.get(args.zip_url, stream=True)\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        request = requests.get(url, stream=True)\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/schlosser/eventum/commit/?diff=split#diff-f4729fea0d9ecf9950ff3b36ce5dfba2ab27cf3fffa642b9e0d176234cdfc8a1L-1",
                    "lines": [
                      {
                        "line": "old_site_url = 'http://adicu.github.com' + request.path\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "old_site_url = 'http://adicu.github.com/' + request.path\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "response = requests.get(old_site_url)\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 25,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "python/HardcodedNonCryptoSecret",
              "name": "HardcodedNonCryptoSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "HardcodedNonCryptoSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/odubno/instagram-analyzer/commit/f4648cd1316ea3f3c305278c4700fabf9eab1f21?diff=split#diff-32daf2e60da907c036013eec3aa1414fe1f1c9f1483987f421e71b47fc533fdcL-1",
                    "lines": [
                      {
                        "line": "client_id = '768fcf1f36c94eb08506bae0a9caffa3'\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secret = '54efcbaed7f64673bc93b4e28ca9e8b2'\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "access_token = '14521798.768fcf1.f05c803b0a9c4c6dbac20060e0c2bc8d'\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import os\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "basedir = os.path.abspath(os.path.dirname(__file__))\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "CLIENT_ID = os.environ['client_id']\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "SECRET = os.environ['secret']\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "ACCESS_TOKEN = os.environ['access_token']\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mikelambert/dancedeets-monorepo/commit/f8e7b78c5e4de1096afe63969b44ca39ea9ed7ab?diff=split#diff-36050a5a8bb8a188ecf53d7559d7ccaac74eef18c1f8c3e1d5ff5531f68db9ddL-1",
                    "lines": [
                      {
                        "line": "app.secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT'\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.secret_key = keys.get('flask_session_key')\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Song-Li/cross_browser/commit/6444442fb5827063c461eccf2c1c8457d26f5786?diff=split#diff-767468ba2e7b08a674604477127158453cc60fd651bac591f73a6245144660a3L-1",
                    "lines": [
                      {
                        "line": "import ConfigParser\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "ACCESS_ID = 'U2FsdGVkX1/qMoSUWBeff4jFDihBczJbZNFHc6Kn/tlpEDKiCCp9DGmdSte2CVmB'\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "SECRET_KEY = 'U2FsdGVkX19KzfE5gaEi5Y5RFyZWOTHz8+IssrQ2Xi1LfK+MFAQFZYzlGxRsyWlCdgL1sB0ZVDHlI4gBqROpZw=='\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "#encrypited\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "config = ConfigParser.ConfigParser()\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config.read(\"./keys.conf\")\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "ACCESS_ID = config.get('keys', 'ACCESS_ID')\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "SECRET_KEY = config.get('keys', 'SECRET_KEY')\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 250,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps",
              "name": "HttpToHttps",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HttpToHttps",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eserozvataf/apibone/commit/bbac9343971a20f4fee124b6f0a2f6a80895fb35?diff=split#diff-8b733ca241b0609b1fc0f2e60d14f911b3a82997a939e7eb01fe6c25b759c234L-1",
                    "lines": [
                      {
                        "line": "const http = require('http'),\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require('https'),\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RetireJS/retire.js/commit/82d44d60c98acba0e4c3772709e76b989c4274bb?diff=split#diff-89d400752fb89d946a43778e9f0b3dba25968dcdf8604ae08adbb3ecb236338fL-1",
                    "lines": [
                      {
                        "line": "var http = require('http'),\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var http = require('https'),\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Rich-Harris/packd/commit/c14d17da80ed075ee007de3121422fb2c5b77e4d?diff=split#diff-1821d11fbffbab2187701c42616688d46bf66d7b2cf6eaf363548dd66caa6ebaL-1",
                    "lines": [
                      {
                        "line": "const http = require( 'http' );\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require( 'https' );\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = function get ( url ) {\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn new Promise( ( fulfil, reject ) => {\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\thttp.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\thttps.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "java/SpringCSRF",
              "name": "SpringCSRF",
              "shortDescription": {
                "text": "Spring Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.\n\n## Best practices for prevention\n* Use a vetted library or framework which has anti-CSRF packages that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider including Spring Security library within your application.\n\n\n## References\n* [Spring Security Docs](https://docs.spring.io/spring-security/site/docs/5.0.x/reference/html/csrf.html)\n* [A Guide to CSRF Protection in Spring Security](https://www.baeldung.com/spring-security-csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "SpringCSRF",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "python/CommandInjection",
              "name": "CommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "SourceServer",
                  "SourceWebForm",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ucbvislab/speecheditor/commit/70f2fb2290a28a1db5e65755c3a8307ef538ea99?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "subprocess.call('cp \"%s\" \"%s\"' % (orig_name, full_name), shell=True)\n",
                        "lineNumber": 285,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.copyfile(orig_name, full_name)\n",
                        "lineNumber": 303,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/esozh/eso_zh_ui/commit/7ef4d63f4c7c2e0275daf08862f615dcc6cf69f5?diff=split#diff-483aa1e8daa36090ed6724943f7abfef3f885823db8620ee30cc5ead97b91053L-1",
                    "lines": [
                      {
                        "line": "os.system('mv %s %s' % (filename, new_name))\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.move(filename, new_name)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jjgod/opf-cc/commit/d03202eab8278189bc3d9ebd6ff353772a72189d?diff=split#diff-fd2c598923afdaa788e7469b2866ea4d019adcb333e33494e563810508d06700L-1",
                    "lines": [
                      {
                        "line": "cmd = \"rm -rf '%s'\" % input_path\n",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "os.system(cmd)\n",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shutil.rmtree(input_path)\n",
                        "lineNumber": 143,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 81,
                "cwe": [
                  "CWE-78"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/Sqli",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a web form flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a web form](0)",
              "[flows](1),(2),(3),(4)",
              "[execute](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "startColumn": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cd9dae54c3d9cd9790ad5b01b9e09bd40521664578872b435cdfa248438c8e77",
            "1": "e9dc0b2f.222791ce.79e62dc9.7369b21f.1d07cee4.bbcef033.a2237efa.f46ed94e.e9dc0b2f.83099170.ad531fd5.7369b21f.89a7456e.bbcef033.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 19,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 13,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 32,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 17,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 814,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/Sqli",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a web form flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[a web form](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[execute](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "44a5086d260860035fe662a92675423025de81b0bcffbd14a23c5f41696b87ee",
            "1": "6bbb016e.ab5d79e8.79e62dc9.7369b21f.5192d5be.ba14daf2.081ac3f4.a52f12f1.7ee49861.cae4cd67.ad531fd5.7369b21f.89a7456e.bc9949d2.a2237efa.91057b05"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 24,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 13,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 83,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 25,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 17,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 32,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 17,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 814,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/Sqli",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[execute](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-api/main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 9,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a49527311431535a47019e961f39a783ae2a10b9ad7c9dcb17e86c3b9a809e0e",
            "1": "6bbb016e.ecc4e7fd.79e62dc9.7369b21f.cc857d4e.ba14daf2.48572096.b60afa86.78e80c9f.cae4cd67.67f79b92.f08de77e.af3d5a48.7eee6d6e.22a8b49e.b60afa86"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 65,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 21,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 9,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 24,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 814,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-js/server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 321,
                  "startColumn": 34,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd7986383add181b441bb5fdf17e9970f9f1cd13136885240c32383c2d9d9a70",
            "1": "d7990cfd.4773f344.6bb8eed2.c559ebce.fd1fa73f.6f0d36d4.83265159.63ad1ad6.c3f8dfad.4773f344.d9fd6cba.c559ebce.6432a006.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 321,
                            "startColumn": 34,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/XSS",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into here, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[here](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 20,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "894410ae2022559e7fa7e8c19d542e618af049b0bfdfba0738b086df57122c45",
            "1": "e6fcc0e0.1cbd3ff4.fc7d5400.e22980a8.d31a8364.f940a352.bae646e8.54d46e25.e1d7cd7c.9ae17fe4.5f73edd4.2e7356d6.d31a8364.8b02546e.4a120e19.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 57,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 57,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 63,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 41,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 31,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 41,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 41,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 20,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 64,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 64,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 38,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 20,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 20,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 805,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an exception flows into end, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[end](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-js/server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 222,
                  "startColumn": 13,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8abe60adaa02eafa1f39961eb1e0bc870c42249d5b4b70585b889c7790212f9d",
            "1": "bc441d81.4773f344.607187b5.f952b2fa.ef9f7d82.756a1932.cd61fc56.9b5cefb9.51bd987d.2d624f44.6ff5c2c8.d3185418.5bcab2b0.8431f2ca.f0256597.e6930396"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 77,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 77,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 13,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 17,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/OR",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into fastapi.responses.RedirectResponse, where it is used as input for request redirection. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as input for request redirection. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[fastapi.responses.RedirectResponse](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-api/main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 214,
                  "endLine": 214,
                  "startColumn": 12,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05aa9703ecd4d3d275b889484288f45568f2d17d62c7448be72988a28d712286",
            "1": "8a30cfc6.993139d5.2683ade8.2e6e71f6.d3b54a17.ba14daf2.0a7337bb.4201a018.78e80c9f.d7903a33.67f79b92.f08de77e.369a7f3e.7eee6d6e.22a8b49e.4b990010"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 212,
                            "endLine": 212,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 12,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/ServerInformationExposure",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "The stack trace from an exception flows into the return value of index and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "markdown": "The stack trace from {0} {1} into {2} and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[the return value of index](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8245a6d925a16ae0d32dfe43edb2e3f2bae016cfe4ddbe28d6139ac835a8a064",
            "1": "8a30cfc6.575f236b.79e62dc9.80d289be.3b41a66e.8fff336c.0a7337bb.ebed174f.973f29f2.379b67bf.76fe3275.80d289be.4de980ca.05a1d16e.22a8b49e.fb7ef6ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 98,
                            "startColumn": 29,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 98,
                            "startColumn": 29,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 40,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 26,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 17,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 12,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 12,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/RunWithDebugTrue",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Running the application in debug mode (debug flag is set to True in run) is a security risk if the application is accessible by untrusted parties.",
            "markdown": "Running the application in debug mode (debug flag is set to {0} in {1}) is a security risk if the application is accessible by untrusted parties.",
            "arguments": [
              "[True](0)",
              "[run](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "endLine": 168,
                  "startColumn": 5,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "faeb9e7bf2e8f436b063ed368889732a8de97034443905e6b1907874eff31100",
            "1": "ad31a887.7e58cdcf.671b1085.139c59a8.7b4de430.c51b300a.fa793294.ebed174f.b1a8a79f.277c621c.671b1085.08fb6340.828d6b14.7eee6d6e.fa793294.baf4e289"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 46,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 5,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-js/server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 3,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1c64b45e17c0ae8d4dda344782f6ec3c34caa51843de810dcc09ffbf76fbcd4c",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.3cee0341.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.3cee0341"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 564,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in hashedPassword.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[hashedPassword](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-js/init_db.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 28,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6999691ee7ece70036475e343c3eba88bd8250de82b60db4f8a00598323465c8",
            "1": "40c5fd92.3f481afb.4b58732b.e052b9a9.79a7d027.fcf3002d.f531d131.b5fa914c.40c5fd92.3f481afb.4b58732b.e052b9a9.79a7d027.fcf3002d.f531d131.b5fa914c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/init_db.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 28,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 564,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in hashedPassword.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[hashedPassword](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-js/init_db.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 28,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d4da80f5d4969e4590832aaef0e50bd9b8117b4cdc0d17ab65e21a7d4bb8b222",
            "1": "95757251.3f481afb.4b58732b.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b5fa914c.95757251.3f481afb.4b58732b.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b5fa914c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/init_db.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 28,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 564,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into save, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[save](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d8894b8988cffb85c734856e1a0f44b944cc59f51919cfcbaab1daf0e67282ff",
            "1": "3db45c55.67df6de4.79e62dc9.792dc0bb.dfd4e790.ba14daf2.081ac3f4.c0e75779.aae8f0ff.d65c0e39.da4aa1aa.dad8a914.1d07cee4.5d90e2b5.9bfded97.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 29,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 13,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 57,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 57,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 32,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 805,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/ServerLeak",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "By default, Sequelize will log every SQL query it performs to the console. This may lead to sensitive data (e.g. passwords / hashes) being leaked to the logs. Consider disabling logging by setting the 'logging' field of the 'options' argument.",
            "markdown": "By default, Sequelize will log every SQL query it performs to the console. This may lead to sensitive data (e.g. passwords / hashes) being leaked to the logs. Consider disabling logging by setting the 'logging' field of the 'options' argument.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-js/init_db.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 7,
                  "startColumn": 53,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f7a72c137aebe9be8cda292e433175379b9e616ae29f91b79ac2f2ab3a0656b9",
            "1": "2b01eb6d.3f481afb.8b18f948.d7919eeb.79a7d027.ff220da9.c87c85b5.91c60b7d.2b01eb6d.3f481afb.8b18f948.d7919eeb.79a7d027.5fce695c.5392326b.48d7346b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/init_db.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2,
                            "endLine": 7,
                            "startColumn": 53,
                            "endColumn": 2
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/Deserialization",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into java.io.ObjectInputStream, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3)",
              "[java.io.ObjectInputStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "startColumn": 41,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a8b04fa42cfb16595c8568b40cdca566d279ed5c92929a4401651fcf1e4facce",
            "1": "5ea6761b.cb3ed26d.0fd4bb2a.c81e2a8c.5e702a64.4cdc7c2d.4a120e19.203bd690.8df8fa68.9ae17fe4.622565c7.63452e0c.c0e417a5.4cdc7c2d.4a120e19.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 57,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 57,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 63,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 59,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 41,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 805,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/Ssrf",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into requests.get, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2)",
              "[requests.get](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-api/main.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 205,
                  "endLine": 205,
                  "startColumn": 20,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "17cd9a9ffe5b1169bb72aec0b19835c95f6e1926a02a099506ee30a9d90316a1",
            "1": "2b627c13.2da3d253.ef7ad415.139c59a8.f4f10911.786f7372.081ac3f4.d5c196e5.78e80c9f.2da3d253.67f79b92.f08de77e.25ac000c.7eee6d6e.cc914b1e.36100b92"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-api/main.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 559,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/Ssrf",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a web form flows into requests.get, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "arguments": [
              "[a web form](0)",
              "[flows](1),(2),(3),(4)",
              "[requests.get](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 28,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "711cc9f553dc3eaa8ae97a04f2c78dcf88b5ee26436b1c5e6f6f62cf15cbd8c7",
            "1": "1f97d6e2.2da3d253.ef7ad415.139c59a8.f4f10911.786f7372.a2237efa.f46ed94e.1f97d6e2.2da3d253.ef7ad415.139c59a8.89a7456e.786f7372.cc914b1e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 19,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 13,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 41,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 28,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 559,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/HardcodedNonCryptoSecret",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9,
                  "startColumn": 21,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6b1b0821d7bd99b806f9eca3a38bd46c73faa3f2cfcb4a6f338ef429732b945b",
            "1": "a2ff52cd.976f7a3f.79e62dc9.aeea7fc5.b3421998.a1632d4f.457216f5.742d9b21.a2ff52cd.976f7a3f.79e62dc9.aeea7fc5.b3421998.a1632d4f.457216f5.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 21,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 21,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 814,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/HardcodedNonCryptoSecret",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "startColumn": 1,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c42ddef826e834a7610370ff0ce439e99a1bda3380e8d73946953888be4316c8",
            "1": "0ead0f00.976f7a3f.79e62dc9.9dcd575c.e0a88418.a1632d4f.25ca586c.742d9b21.0ead0f00.976f7a3f.79e62dc9.9dcd575c.e0a88418.a1632d4f.25ca586c.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 1,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 1,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 814,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/HardcodedNonCryptoSecret",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/ransomware.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 15,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05a260b73396bbd76934dfc86aace5485d971f57e5c1bce900194b1fbfb6299a",
            "1": "a2ff52cd.45f54b94.79e62dc9.aeea7fc5.358e7f68.ed169cb6.b69c6615.34e07048.a2ff52cd.45f54b94.79e62dc9.aeea7fc5.358e7f68.ed169cb6.b69c6615.34e07048"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/ransomware.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 15,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/ransomware.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 15,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 764,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.createServer](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-js/server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "754f6f3a066e1b4ec36c8915f402b87c4f1979e7526a6abee561b4e470d850ea",
            "1": "ae77ea27.883ce888.8b18f948.c559ebce.2fce9a75.5fce695c.cd61fc56.89d75565.7a85a498.4773f344.8b18f948.c559ebce.6432a006.5fce695c.cd61fc56.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-js/server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/SpringCSRF",
          "ruleIndex": 14,
          "level": "note",
          "message": {
            "text": "The data parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "markdown": "The {0} parameter is vulnerable to Cross Site Request Forgery (CSRF) attacks due to not using Spring Security. This could allow an attacker to execute requests on a user's behalf. Consider including Spring Security's CSRF protection within your application.",
            "arguments": [
              "[data](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 57,
                  "endColumn": 81
                }
              }
            }
          ],
          "fingerprints": {
            "0": "db433ffdb8b5b8dfbf476dfd74b483a4f4de9daac6cf669650031a3d50183e52",
            "1": "8df8fa68.7f413d6f.622565c7.c81e2a8c.c0e417a5.0d476878.21090fe4.f10ae4e8.8df8fa68.7f413d6f.622565c7.c81e2a8c.c0e417a5.0d476878.21090fe4.f10ae4e8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-java/src/main/java/com/example/insecurejava/UnsafeDeserializationController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 57,
                            "endColumn": 81
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 205,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a web form flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[a web form](0)",
              "[flows](1),(2),(3),(4)",
              "[subprocess.Popen](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insecure-app/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 23,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9bf54172fa32b8ae425808f88a617dcc8c55070adb175f0f6a62efb5006bfc27",
            "1": "a6b41d6e.de616afe.79e62dc9.139c59a8.1d07cee4.ba14daf2.a2237efa.f46ed94e.a6b41d6e.f16887a3.79e62dc9.599642fa.89a7456e.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 19,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 13,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "insecure-app/app.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 805,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "XML",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 8,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 32,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java",
            "files": 16,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
